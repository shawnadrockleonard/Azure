{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Database Administrator Login": {
            "type": "string",
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "Database Administrator Login Password": {
            "type": "securestring",
            "metadata": {
                "description": "Database administrator password"
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "accessPolicies": {
            "type": "array",
            "defaultValue": []
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": true
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false
        },
        "enableRbacAuthorization": {
            "type": "bool",
            "defaultValue": false
        },
        "enableSoftDelete": {
            "type": "bool",
            "defaultValue": true
        },
        "softDeleteRetentionInDays": {
            "type": "int",
            "defaultValue": 90
        },
        "networkAcls": {
            "type": "object",
            "defaultValue": {
                "defaultAction": "allow",
                "bypass": "AzureServices",
                "ipRules": [],
                "virtualNetworkRules": []
            }
        },
        "logAnalyticsSku": {
            "type": "string",
            "defaultValue": "pergb2018"
        },
        "tags": {
            "type": "object",
            "defaultValue": {}
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://github.com/shawnadrockleonard/azure-devtestlab/tree/master/Environments/WebApp-ASE-Nested"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            }
        }
    },
    "variables": {
        "resourceNamePrefix": "[take(uniqueString(resourceGroup().id), 3)]",
        "hostingPlanName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-sp'))]",
        "siteName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6)))]",
        "serverName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-db'))]",
        "keyVaultName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-kv'))]",
        "appLogName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-logs'))]",
        "appInsightsName": "[toLower(concat(variables('resourceNamePrefix'), '-', take(uniqueString(resourceGroup().id), 6), '-insights'))]",
        "databaseName": "[concat('db', uniqueString(resourceGroup().id, variables('siteName')))]",
        "databaseVersion": "12.0"
    },
    "resources": [
        {
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": "1",
                "hostingEnvironment": "",
                "numberOfWorkers": 0
            },
            "sku": {
                "Tier": "Standard",
                "Name": "S1"
            }
        },
        {
            "name": "[variables('siteName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-02-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": "[parameters('tags')]",
            "properties": {
                "name": "[variables('siteName')]",
                "serverFarmId": "[variables('hostingPlanName')]",
                "hostingEnvironment": ""
            },
            "resources": [
                {
                    "type": "config",
                    "name": "appsettings",
                    "apiVersion": "2016-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('siteName'))]"
                    ],
                    "properties": {
                        "AzureKeyVault:Vault": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2018-02-14').vaultUri]",
                        "ASPNETCORE_ENVIRONMENT": "Development",
                        "MSDEPLOY_RENAME_LOCKED_FILES": "1"
                    }
                }
            ]
        },
        {
            "name": "[variables('serverName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "administratorLogin": "[parameters('Database Administrator Login')]",
                "administratorLoginPassword": "[parameters('Database Administrator Login Password')]",
                "version": "[variables('databaseVersion')]"
            },
            "resources": [
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "apiVersion": "2015-01-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[variables('serverName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[variables('serverName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": "[parameters('tags')]",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "accessPolicies": "[parameters('accessPolicies')]",
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "networkAcls": "[parameters('networkAcls')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[variables('appLogName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "[parameters('logAnalyticsSku')]"
                }
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('appLogName'))]"
            ],
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('appLogName'))]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat('AppServiceEnvironmentWebAppPolicies.', variables('siteName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites',variables('siteName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/nestedtemplates/webapp-akv-policies.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "resourceIds": {
                        "value": [
                            {
                                "objectId": "[resourceId('Microsoft.Web/sites', variables('siteName'))]",
                                "name": "[variables('siteName')]"
                            }
                        ]
                    }
                }
            }
        }
    ]
}